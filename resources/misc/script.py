from sqlalchemy import text

sql = text('BEGIN; '
          'DROP TABLE IF EXISTS UpdatableRows;'
          'CREATE TEMPORARY TABLE IF NOT EXISTS UpdatableRows AS '
          'WITH FeatureRequestsCP AS '
          '(SELECT "ClientPriority", '
          'ROW_NUMBER() OVER (ORDER BY "ClientPriority" ASC) AS "ranking_cp" '
          'FROM FeatureRequests '
          'WHERE "ClientID" = :newClientID '
          'AND "ClientPriority" >= :newClientPriority) '
          'SELECT "ClientPriority", '
          'RANK() OVER (ORDER BY "ranking_cp" ASC) AS "ranking" '
          'FROM FeatureRequestsCP CP '
          'WHERE EXISTS (SELECT "ClientPriority" FROM FeatureRequestsCP '
          'WHERE "ClientPriority" <= CP."ClientPriority" - 2 AND ranking_cp = CP.ranking_cp - 1 ); '
          'With breakpoint AS (SELECT "ClientPriority"  FROM UpdatableRows ORDER BY "ranking" ASC LIMIT 1) '
          'UPDATE FeatureRequests FR '
          'SET "ClientPriority" = '
          'CASE WHEN (SELECT COUNT("ClientPriority") FROM UpdatableRows) = 0 THEN FR."ClientPriority"  + 1 '
          'WHEN (SELECT "ClientPriority" FROM breakpoint) <= FR."ClientPriority" THEN FR."ClientPriority"  '
          'ELSE FR."ClientPriority" + 1 END '
          'WHERE (FR."ClientID" = :newClientID '
          'AND FR."ClientPriority" >= :newClientPriority); '
          'COMMIT;').execution_options(autocommit=True)